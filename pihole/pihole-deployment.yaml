apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    io.kompose.service: pihole
  name: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: pihole
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: pihole
    spec:
      containers:
      - env:
        - name: TZ
          value: Europe/Berlin
        - name: WEBPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pihole-webpassword
        image: pihole/pihole:latest
        imagePullPolicy: ""
        name: pihole
        ports:
        - containerPort: 53
        - containerPort: 53
          protocol: UDP
        - containerPort: 67
          protocol: UDP
        - containerPort: 80
        - containerPort: 443
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
        volumeMounts:
        - mountPath: /etc/pihole/
          name: pihole-etc-volume
        - mountPath: /etc/dnsmasq.d/
          name: pihole-dnsmasq-volume
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
        - 127.0.0.1
        - 1.1.1.1
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: pihole-etc-volume
        persistentVolumeClaim:
          claimName: pihole-etc-claim
      - name: pihole-dnsmasq-volume
        persistentVolumeClaim:
          claimName: pihole-dnsmasq-claim
status: {}
